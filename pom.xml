<?xml version="1.0" encoding="UTF-8" ?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat.sample</groupId>
	<artifactId>poc-fuse-kafka-producer</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>poc-fuse-kafka-producer</name>
	<description>Fileを取得し、KafkaのProducerとしてメッセージをPublishする</description>
	<properties>
		<!-- configure the Fuse version you want to use here -->
		<fuse.bom.version>7.6.0.fuse-sb2-760028-redhat-00001</fuse.bom.version>
		<maven-compiler-plugin.version>3.7.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<swagger.ui.version>3.24.3</swagger.ui.version>
		<postgresql.jdbc.version>42.2.11</postgresql.jdbc.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>fuse-springboot-bom</artifactId>
				<version>${fuse.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
		</dependency>
		<!-- calling rest services through http4 -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-http4</artifactId>
		</dependency>
		<!-- Java <-> JSON converter -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jsonpath-starter</artifactId>
			<!-- use the same version as your Camel core version -->
		</dependency>
		<!--Camel Servlet starter -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-servlet-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		<!-- Swagger support for restdsl -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-swagger-java-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<version>${swagger.ui.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-undertow-starter</artifactId>
		</dependency>

		<!-- Kafka -->
		<!-- 下のstarterだけだと、because of Failed to create Producer for endpoint: kafka://item-topic?brokers=localhost%3A9092. Reason: java.lang.NoClassDefFoundError: org/apache/kafka/clients/producer/Callbackと言われる　-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-kafka</artifactId>
        </dependency>
		
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-kafka</artifactId> -->
			<artifactId>camel-kafka-starter</artifactId>
		</dependency>

		<!-- JDBC -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-jdbc</artifactId> -->
			<artifactId>camel-jdbc-starter</artifactId>
		</dependency>

		<!-- SQL -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-sql</artifactId> -->
			<artifactId>camel-sql-starter</artifactId>
		</dependency>

		<!-- MyBatis -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-mybatis</artifactId> -->
			<artifactId>camel-mybatis-starter</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.jdbc.version}</version>
		</dependency>

		<!-- Fixed Length -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-flatpack</artifactId> -->
			<artifactId>camel-flatpack-starter</artifactId>
		</dependency>

		<!-- AWS S3 -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<!-- <artifactId>camel-aws</artifactId> -->
			<artifactId>camel-aws-starter</artifactId>
		</dependency>
		
		<!-- autoreload on changes -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>runtime</scope>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<id>red-hat-ga-repository</id>
			<url>https://maven.repository.redhat.com/ga</url>
		</repository>
		<repository>
			<id>red-hat-early-access-repository</id>
			<url>https://maven.repository.redhat.com/earlyaccess/all</url>
		</repository>
		<repository>
			<id>jboss-early-access-repository</id>
			<url>https://repository.jboss.org/nexus/content/groups/ea</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>red-hat-ga-repository</id>
			<url>https://maven.repository.redhat.com/ga</url>
		</pluginRepository>
		<pluginRepository>
			<id>red-hat-early-access-repository</id>
			<url>https://maven.repository.redhat.com/earlyaccess/all</url>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-early-access-repository</id>
			<url>https://repository.jboss.org/nexus/content/groups/ea</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<defaultGoal>spring-boot:run</defaultGoal>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<version>${fuse.bom.version}</version>
			</plugin>
			<plugin>
				<groupId>org.jboss.redhat-fuse</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fuse.bom.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>resource</goal>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>